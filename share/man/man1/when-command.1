.\" Man page generated from reStructuredText.
.
.TH "WHEN-COMMAND" "1" "December 19, 2015" "0.9" "When Documentation"
.SH NAME
when-command \- When Documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
\fBWhen\fP is a configurable user task scheduler for modern Gnome environments.
It interacts with the user through a GUI, where the user can define tasks and
conditions, as well as relationships of causality that bind conditions to
tasks.
.sp
This manual page briefly describes the \fIcommand line interface\fP of \fBWhen\fP
and the configuration file.
.SH COMMAND LINE INTERFACE
.sp
This paragraph illustrates the command line options that can be used to either
control the behaviour of a running \fBWhen\fP instance or to handle its
configuration or persistent state \-\- consisting of \fItasks\fP, \fIconditions\fP and
\fIsignal handlers\fP\&. Some of the options are especially useful to recover when
something has gone the wrong way \-\- such as the \fB\-\-show\-settings\fP switch
mentioned above, or the \fB\-I\fP (or \fB\-\-show\-icon\fP) switch, to recover from an
unwantedly hidden icon. There are also switches that grant access to "advanced"
features, which are better covered in the next sections.
.sp
The available options are:
.INDENT 0.0
.TP
.B \-s\fP,\fB  \-\-show\-settings
show the settings dialog box of an existing instance,
it requires a running instance, which may be queried
using the \fB\-\-query\fP switch explained below
.TP
.B \-l\fP,\fB  \-\-show\-history
show the history dialog box of an existing instance
.TP
.B \-t\fP,\fB  \-\-show\-tasks
show the task dialog box of an existing instance
.TP
.B \-c\fP,\fB  \-\-show\-conditions
show the condition dialog box of an existing instance
.TP
.B \-d\fP,\fB  \-\-show\-signals
show the DBus signal handler editor box for an
existing instance [1]
.TP
.B \-R\fP,\fB  \-\-reset\-config
reset applet configuration to default, requires the
applet to be shut down with an appropriate switch
.TP
.B \-I\fP,\fB  \-\-show\-icon
show applet icon, the icon will be shown at the next
startup
.TP
.B \-T\fP,\fB  \-\-install
install or reinstall application icon and autostart
icon, requires applet to be shut down with an
appropriate switch
.TP
.B \-C\fP,\fB  \-\-clear
clear current tasks, conditions and possibly signal
handlers, requires applet to be shut down with an
appropriate switch
.TP
.B \-Q\fP,\fB  \-\-query
query for an existing instance (returns a zero exit
status if an instance is running, nonzero otherwise,
and prints an human\-readable message if the
\fB\-\-verbose\fP switch is also specified)
.TP
.BI \-H \ file\fP,\fB \ \-\-export\-history \ file
export the current task history (the ones
shown in the history box) to the file
specified as argument in a CSV\-like format
.TP
.BI \-r \ cond\fP,\fB \ \-\-run\-condition \ cond
trigger a command\-line associated condition
and immediately run the associated tasks;
\fIcond\fP must be specified and has to be one of
the \fICommand Line Trigger\fP conditions,
otherwise the command will fail and no task
will be run
.TP
.BI \-f \ cond\fP,\fB \ \-\-defer\-condition \ cond
schedule a command\-line associated condition
to run the associated tasks at the next clock
tick; the same as above yields for \fIcond\fP
.TP
.B \-\-shutdown
close a running instance performing shutdown tasks
first
.TP
.B \-\-kill
close a running instance abruptly, no shutdown tasks
are run
.TP
.BI \-\-export \ file
save tasks, conditions and other items to a portable
format; the \fIfile\fP argument is optional, and if not
specified the applet tries to save these items to a
default file in \fB~/.config/when\-command\fP; this will
especially be useful in cases where the compatibility
of the "running" versions of tasks and conditions
(which are a binary format) could be broken across
releases
.TP
.BI \-\-import \ file
clear tasks, conditions and other items and import
them from a previously saved file; the \fIfile\fP argument
is optional, and if not specified the applet tries
to import these items from the default file in the
\fB~/.config/when\-command\fP directory; the applet has
to be shut down before attempting to import items.
.UNINDENT
.sp
Some trivial switches are also available:
.INDENT 0.0
.TP
.B \-h\fP,\fB  \-\-help
show a brief help message and exit
.TP
.B \-V\fP,\fB  \-\-version
show applet version, if \fB\-\-verbose\fP is specified
it also shows the \fIAbout Box\fP of a running instance,
if present
.TP
.B \-v\fP,\fB  \-\-verbose
show output for some options; normally the applet
would not display any output to the terminal unless
\fB\-v\fP is specified, the only exception being
\fB\-\-version\fP that prints out the version string
anyway.
.UNINDENT
.sp
Please note that whenever a command line option is given, the applet will not
"stay resident" if there is no running instance. On the other side, if the user
invokes the applet when already running, the new instance will bail out with
an error.
.SH CONFIGURATION
.sp
The program settings are available through the specific \fISettings\fP dialog box,
and can be manually set in the main configuration file, which can be found in
\fB~/.config/when\-command/when\-command.conf\fP\&.
.sp
The options are:
.INDENT 0.0
.IP 1. 3
\fBGeneral\fP
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fIShow Icon\fP: whether or not to show the indicator icon and menu
.IP \(bu 2
\fIAutostart\fP: set up the applet to run automatically at login
.IP \(bu 2
\fINotifications\fP: whether or not to show notifications upon task failure
.IP \(bu 2
\fIIcon Theme\fP: \fIGuess\fP to let the application decide, otherwise one of
\fIDark\fP (light icons for dark themes), \fILight\fP (dark icons for light
themes), and \fIColor\fP for colored icons that should be visible on all
themes.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP 2. 3
\fBScheduler\fP
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fIApplication Clock Tick Time\fP: represents the tick frequency of the
application clock, sort of a heartbeat, each tick verifies whether or not
a condition has to be checked; this option is called \fBtick seconds\fP in
the configuration file
.IP \(bu 2
\fICondition Check Skip Time\fP: conditions that require some "effort" (mainly
the ones that depend on an external command) will skip this amount of
seconds from previous check to perform an actual test, should be at least
the same as \fIApplication Clock Tick Time\fP; this is named \fBskip seconds\fP
in the configuration file
.IP \(bu 2
\fIPreserve Pause Across Sessions\fP: if \fItrue\fP (the default) the scheduler
will remain paused upon applet restart if it was paused when the applet (or
session) was closed. Please notice that the indicator icon gives feedback
anyway about the paused/non\-paused state. Use \fBpreserve pause\fP in the
configuration file.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP 3. 3
\fBAdvanced\fP
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fIMax Concurrent Tasks\fP: maximum number of tasks that can be run in a
parallel run (\fBmax threads\fP in the configuration file)
.IP \(bu 2
\fILog Level\fP: the amount of detail in the log file
.IP \(bu 2
\fIMax Log Size\fP: max size (in bytes) for the log file
.IP \(bu 2
\fINumber Of Log Backups\fP: number of backup log files (older ones are erased)
.IP \(bu 2
\fIInstance History Items\fP: max number of tasks in the event list (\fIHistory\fP
window); this option is named \fBmax items\fP in the configuration file
.IP \(bu 2
\fIEnable User Defined Events\fP: if set, then the user can define events
using DBus \fI(see below)\fP\&. Please note that if there are any user defined
events already present, this option remains set and will not be modifiable.
It corresponds to \fBuser events\fP in the configuration file. Also, to make
this option effective and to enable user defined events in the
\fIConditions\fP dialog box, the applet must be restarted
.IP \(bu 2
\fIEnable File and Directory Notifications\fP: if set, \fBWhen\fP is configured
to enable conditions based on file and directory changes. The option may
result disabled if the required optional libraries are not installed. When
the setting changes, the corresponding events and conditions are enabled
or disabled at next startup.
.IP \(bu 2
\fIEnable Task and Condition Environment Variables\fP: whether or not to export
specific environment variables with task and condition names when spawning
subprocesses (either in \fITasks\fP or in \fICommand Based Conditions\fP). The
configuration entry is \fBenvironment vars\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
The configuration is \fIimmediately stored upon confirmation\fP to the
configuration file, although some settings (such as \fINotifications\fP,
\fIIcon Theme\fP, and most advanced settings) might require a restart of the
applet. The configuration file can be edited with a standard text editor, and
it follows some conventions common to most configuration files. The sections
in the file might slightly differ from the tabs in the \fISettings\fP dialog, but
the entries are easily recognizable.
.sp
By default the applet creates a file with the following configuration, which
should be suitable for most setups:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[Scheduler]
tick seconds = 15
skip seconds = 60
preserve pause = true

[General]
show icon = true
autostart = false
notifications = true
log level = warning
icon theme = guess
user events = false
file notifications = false
environment vars = true

[Concurrency]
max threads = 5

[History]
max items = 100
log size = 1048576
log backups = 4
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Manual configuration can be particularly useful to bring back the program
icon once the user decided to hide it losing access to the menu,
by setting the \fBshow icon\fP entry to \fBtrue\fP\&. Another way to force access to
the \fISettings\fP dialog box when the icon is hidden is to invoke the applet from
the command line using the \fB\-\-show\-settings\fP (or \fB\-s\fP) switch when an
instance is running.
.IP [1] 5
This is an advanced feature and is not available by default.
It has to be enabled in the program settings to be accessible. Refer to the
appropriate chapter for more information.
.SH AUTHOR
Francesco Garosi
.SH COPYRIGHT
2015, Francesco Garosi
.\" Generated by docutils manpage writer.
.
